Given an integer number n, return the difference between the product of its digits and the sum of its digits.
 

Example 1:

Input: n = 234
Output: 15 
Explanation: 
Product of digits = 2 * 3 * 4 = 24 
Sum of digits = 2 + 3 + 4 = 9 
Result = 24 - 9 = 15
Example 2:

Input: n = 4421
Output: 21
Explanation: 
Product of digits = 4 * 4 * 2 * 1 = 32 
Sum of digits = 4 + 4 + 2 + 1 = 11 
Result = 32 - 11 = 21
 

Constraints:

1 <= n <= 10^5


SOLUTION



class Solution {
    public int subtractProductAndSum(int n) {
        int product = 1;
        int sum = 0;
        while(n > 0){
            int rem = n % 10;
            product = product * rem;
            sum = sum + rem;
            n = n/10;
        }
        return (product - sum);
    }
}


RECURSIVE_SOLUTION

class Solution {
public int subtractProductAndSum(int n) {
    return prodDigits(n) - sumDigits(n);
}

public int sumDigits(int N){
    if(N < 10)return N;
    return sumDigits(N/10)+(N%10);
}

public int prodDigits(int N){
    if(N < 10)return N;
    return prodDigits(N/10)*(N%10);
}
}
